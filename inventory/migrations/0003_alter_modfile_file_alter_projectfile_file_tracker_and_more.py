# Generated by Django 5.2.4 on 2025-10-18 03:56

import django.core.validators
import django.db.models.deletion
import inventory.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0002_remove_printer_dummy_field'),
    ]

    operations = [
        migrations.AlterField(
            model_name='modfile',
            name='file',
            field=models.FileField(upload_to=inventory.models.get_mod_upload_path),
        ),
        migrations.AlterField(
            model_name='projectfile',
            name='file',
            field=models.FileField(upload_to=inventory.models.get_project_upload_path),
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('github_url', models.URLField(help_text='GitHub repository URL where files are located', max_length=512)),
                ('storage_type', models.CharField(choices=[('link', 'Store GitHub Links'), ('local', 'Download and Store Locally')], help_text='How to store the STL files', max_length=10)),
                ('primary_color', models.CharField(default='#1E40AF', help_text='Hex color code for primary color (e.g., #1E40AF)', max_length=7)),
                ('accent_color', models.CharField(default='#DC2626', help_text='Hex color code for accent color (e.g., #DC2626)', max_length=7)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(blank=True, help_text='Optional: Associate this tracker with a project', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trackers', to='inventory.project')),
            ],
            options={
                'verbose_name': 'Print Tracker',
                'verbose_name_plural': 'Print Trackers',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='TrackerFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('directory_path', models.CharField(blank=True, help_text='Relative directory path (e.g., "Frame/extrusions")', max_length=500)),
                ('github_url', models.URLField(help_text='Direct URL to the file on GitHub', max_length=512)),
                ('local_file', models.FileField(blank=True, help_text='Local copy of the file (if downloaded)', null=True, upload_to=inventory.models.get_tracker_upload_path)),
                ('file_size', models.BigIntegerField(default=0, help_text='File size in bytes')),
                ('sha', models.CharField(blank=True, help_text='GitHub file SHA hash for verification', max_length=40)),
                ('color', models.CharField(blank=True, help_text='Color name (e.g., Primary, Accent, Multicolor)', max_length=50)),
                ('material', models.CharField(blank=True, help_text='Material type (e.g., ABS, PLA, PETG)', max_length=50)),
                ('quantity', models.IntegerField(default=1, help_text='Number of copies needed', validators=[django.core.validators.MinValueValidator(1)])),
                ('is_selected', models.BooleanField(default=True, help_text='Whether this file is included in the tracker')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='not_started', max_length=20)),
                ('printed_quantity', models.IntegerField(default=0, help_text='Number of copies already printed', validators=[django.core.validators.MinValueValidator(0)])),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('download_date', models.DateTimeField(blank=True, help_text='When the file was downloaded (if local storage)', null=True)),
                ('tracker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='inventory.tracker')),
            ],
            options={
                'verbose_name': 'Tracker File',
                'verbose_name_plural': 'Tracker Files',
                'ordering': ['directory_path', 'filename'],
                'unique_together': {('tracker', 'directory_path', 'filename')},
            },
        ),
    ]
